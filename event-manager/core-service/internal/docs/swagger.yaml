basePath: /api/v1
definitions:
  domain.BalanceReportResponse:
    properties:
      event_id:
        type: integer
      total_amount:
        type: number
      user_balances:
        items:
          $ref: '#/definitions/domain.UserBalance'
        type: array
    type: object
  domain.EventCreateRequest:
    properties:
      description:
        type: string
      end_date:
        type: string
      location:
        type: string
      start_date:
        type: string
      title:
        type: string
    required:
    - end_date
    - start_date
    - title
    type: object
  domain.EventData:
    properties:
      balanceReport:
        $ref: '#/definitions/domain.BalanceReportResponse'
      comments:
        $ref: '#/definitions/model.CommunicationServiceResponse'
      eventData:
        $ref: '#/definitions/domain.EventResponse'
      eventParticipants:
        $ref: '#/definitions/domain.EventParticipantsResponse'
      expenses:
        $ref: '#/definitions/domain.ExpensesResponse'
      tasks:
        $ref: '#/definitions/domain.TasksResponse'
    type: object
  domain.EventParticipantCreateRequest:
    properties:
      email:
        type: string
      event_title:
        type: string
      user_id:
        type: integer
      username:
        type: string
    required:
    - event_title
    type: object
  domain.EventParticipantResponse:
    properties:
      event_id:
        type: integer
      id:
        type: integer
      is_confirmed:
        type: boolean
      joined_at:
        type: string
      role:
        type: string
      user:
        $ref: '#/definitions/domain.UserResponse'
    type: object
  domain.EventParticipantsResponse:
    properties:
      participants:
        items:
          $ref: '#/definitions/domain.EventParticipantResponse'
        type: array
      total:
        type: integer
    type: object
  domain.EventResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      location:
        type: string
      start_date:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  domain.EventsResponse:
    properties:
      events:
        items:
          $ref: '#/definitions/domain.EventResponse'
        type: array
      total:
        type: integer
    type: object
  domain.ExpenseCreateRequest:
    properties:
      amount:
        type: number
      created_by:
        type: integer
      currency:
        type: string
      description:
        type: string
      event_id:
        type: integer
      split_method:
        type: string
      user_ids:
        items:
          type: integer
        type: array
    required:
    - amount
    - created_by
    - currency
    - description
    - event_id
    - split_method
    - user_ids
    type: object
  domain.ExpenseResponse:
    properties:
      amount:
        type: number
      created_at:
        type: string
      created_by:
        type: integer
      currency:
        type: string
      description:
        type: string
      event_id:
        type: integer
      expense_id:
        type: integer
      shares:
        items:
          $ref: '#/definitions/model.ExpenseShare'
        type: array
      split_method:
        type: string
    type: object
  domain.ExpenseShareUpdateRequest:
    properties:
      is_paid:
        type: boolean
    required:
    - is_paid
    type: object
  domain.ExpensesResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/domain.ExpenseResponse'
        type: array
      total_count:
        type: integer
    type: object
  domain.TaskCreateRequest:
    properties:
      assigned_to:
        type: integer
      description:
        type: string
      event_id:
        type: integer
      parent_id:
        type: integer
      priority:
        type: string
      story_points:
        type: integer
      title:
        type: string
    required:
    - event_id
    - title
    type: object
  domain.TaskResponse:
    properties:
      assigned_to:
        type: integer
      created_at:
        type: string
      description:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      parent_id:
        type: integer
      priority:
        type: string
      status:
        $ref: '#/definitions/domain.TaskStatus'
      story_points:
        type: integer
      title:
        type: string
    type: object
  domain.TaskStatus:
    enum:
    - pending
    - in_progress
    - completed
    - cancelled
    type: string
    x-enum-varnames:
    - TaskStatusPending
    - TaskStatusInProgress
    - TaskStatusCompleted
    - TaskStatusCancelled
  domain.TaskUpdateRequest:
    properties:
      assigned_to:
        type: integer
      description:
        type: string
      parent_id:
        type: integer
      priority:
        type: string
      status:
        $ref: '#/definitions/domain.TaskStatus'
      story_points:
        type: integer
      title:
        type: string
    type: object
  domain.TasksResponse:
    properties:
      tasks:
        items:
          $ref: '#/definitions/domain.TaskResponse'
        type: array
      total:
        type: integer
    type: object
  domain.UserBalance:
    properties:
      balance:
        type: number
      user_id:
        type: integer
      username:
        type: string
    type: object
  domain.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      role:
        type: string
      username:
        type: string
    type: object
  model.Comment:
    properties:
      commentId:
        type: integer
      content:
        type: string
      createdAt:
        type: string
      eventId:
        type: integer
      isDeleted:
        type: boolean
      isRead:
        type: boolean
      senderId:
        type: integer
      taskId:
        type: integer
    type: object
  model.CommunicationServiceResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/model.Comment'
        type: array
    type: object
  model.ExpenseShare:
    properties:
      amount:
        type: number
      expenseID:
        type: integer
      isPaid:
        type: boolean
      paidAt:
        type: string
      shareID:
        type: integer
      userID:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing events, users, tasks and expenses
  title: Event Management Core Service API
  version: "1.0"
paths:
  /events:
    get:
      description: Возвращает список событий с пагинацией, может фильтровать по участию
        пользователя
      parameters:
      - description: 'Номер страницы (по умолчанию: 1)'
        in: query
        name: page
        type: integer
      - description: 'Размер страницы (по умолчанию: 10)'
        in: query
        name: size
        type: integer
      - description: ID пользователя для фильтрации по участию
        in: header
        name: X-User-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список событий
          schema:
            $ref: '#/definitions/domain.EventsResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить список событий
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Создает новое событие с указанным пользователем в качестве организатора
      parameters:
      - description: ID пользователя-организатора
        in: header
        name: X-User-Id
        required: true
        type: string
      - description: Данные для создания события
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.EventCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Возвращает ID созданного события
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Ошибка валидации
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Создать новое событие
      tags:
      - events
  /events/{event_id}:
    delete:
      description: Удаляет событие по ID
      parameters:
      - description: ID события
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Операция успешна
        "400":
          description: Некорректный ID события
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Удалить событие
      tags:
      - events
    get:
      description: Возвращает детальную информацию о событии, включая список участников
        и задач
      parameters:
      - description: ID события
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Детальная информация о событии
          schema:
            $ref: '#/definitions/domain.EventData'
        "400":
          description: Некорректный ID события
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить детальную информацию о событии
      tags:
      - events
  /events/{event_id}/participants:
    post:
      consumes:
      - application/json
      description: Добавляет нового участника в событие
      parameters:
      - description: ID события
        in: path
        name: event_id
        required: true
        type: integer
      - description: Данные для добавления участника (необходимо указать либо user_id,
          либо username)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.EventParticipantCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Информация о созданном участии
          schema:
            $ref: '#/definitions/domain.EventParticipantResponse'
        "400":
          description: Ошибка валидации или некорректный ID события
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Добавить участника в событие
      tags:
      - participants
  /events/participants/{event_part_id}:
    delete:
      description: Удаляет участника из события
      parameters:
      - description: ID участия в событии
        in: path
        name: event_part_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Участник успешно удален
        "400":
          description: Некорректный ID участия
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Удалить участника из события
      tags:
      - participants
  /events/participants/{event_part_id}/confirm:
    put:
      description: Подтверждает участие пользователя в событии
      parameters:
      - description: ID участия в событии
        in: path
        name: event_part_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Участие успешно подтверждено
        "400":
          description: Некорректный ID участия
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Подтвердить участие в событии
      tags:
      - participants
  /events/participants/{event_part_id}/decline:
    put:
      description: Отклоняет участие пользователя в событии
      parameters:
      - description: ID участия в событии
        in: path
        name: event_part_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Участие успешно отклонено
        "400":
          description: Некорректный ID участия
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Отклонить участие в событии
      tags:
      - participants
  /expenses:
    post:
      consumes:
      - application/json
      description: Create a new expense with participants
      parameters:
      - description: Expense creation data
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/domain.ExpenseCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new expense
      tags:
      - expenses
  /expenses/{id}:
    delete:
      description: Delete an existing expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete expense
      tags:
      - expenses
  /expenses/shares/{id}/paid-status:
    put:
      consumes:
      - application/json
      description: Update the paid status of an expense share
      parameters:
      - description: Share ID
        in: path
        name: id
        required: true
        type: integer
      - description: Paid status update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.ExpenseShareUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update expense share paid status
      tags:
      - expenses
  /health:
    get:
      description: Проверяет доступность и работоспособность сервиса
      produces:
      - application/json
      responses:
        "200":
          description: 'Статус: ok'
          schema:
            additionalProperties: true
            type: object
        "503":
          description: 'Статус: error'
          schema:
            additionalProperties: true
            type: object
      summary: Проверка состояния сервиса
      tags:
      - health
  /participants/user:
    get:
      description: Возвращает список событий, в которых пользователь является участником
      parameters:
      - description: ID пользователя
        in: header
        name: X-User-Id
        required: true
        type: string
      - description: 'Номер страницы (по умолчанию: 1)'
        in: query
        name: page
        type: integer
      - description: 'Размер страницы (по умолчанию: 10)'
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список участий в событиях
          schema:
            $ref: '#/definitions/domain.EventParticipantsResponse'
        "400":
          description: Некорректный ID пользователя
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить список событий пользователя
      tags:
      - participants
  /tasks:
    get:
      description: Возвращает список задач с пагинацией, может фильтровать по событию
        или пользователю
      parameters:
      - description: 'Номер страницы (по умолчанию: 1)'
        in: query
        name: page
        type: integer
      - description: 'Размер страницы (по умолчанию: 10)'
        in: query
        name: size
        type: integer
      - description: ID события для фильтрации задач
        in: query
        name: event_id
        type: integer
      - description: ID пользователя для фильтрации задач
        in: header
        name: X-User-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список задач
          schema:
            $ref: '#/definitions/domain.TasksResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить список задач
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Создает новую задачу в системе
      parameters:
      - description: Данные для создания задачи
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.TaskCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Возвращает ID созданной задачи
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Ошибка валидации
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Создать новую задачу
      tags:
      - tasks
  /tasks/{task_id}:
    delete:
      description: Удаляет задачу по ID
      parameters:
      - description: ID задачи
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Задача успешно удалена
        "400":
          description: Некорректный ID задачи
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Удалить задачу
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Обновляет существующую задачу по ID
      parameters:
      - description: ID задачи
        in: path
        name: task_id
        required: true
        type: integer
      - description: Данные для обновления задачи
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.TaskUpdateRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Задача успешно обновлена
        "400":
          description: Ошибка валидации или некорректный ID задачи
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Обновить задачу
      tags:
      - tasks
swagger: "2.0"
